<?xml version="1.0"?>
<project name="OpenMap_svg" default="all" basedir=".">

	<!--  ############################
	Set up the different builds.
	############################ -->

	<target name="init" description="Sets properties needed by the other targets.">
		<tstamp />

		<property name="openmap.home" value="../.." />
		<property name="openmap.svg" value="${openmap.home}/src/svg" />		
		<property name="svg.src" value="${openmap.svg}/src/main/java" />
		<property name="svg.classes" value="${openmap.svg}/build/classes" />
		<property name="svg.jar" value="${openmap.svg}/dist/omsvg.jar" />
		<property name="svg.docs" value="${openmap.home}/doc" />

		<property name="general.excludes" value="**/*.in, **/Makefile, **/*.bat,
		                             **/ChangeLog, **/*.html, **/*.txt,
					     **/*.*.txt, **/*.dat,
					     **/*.pl, **/unimplemented/**, **/build.xml" />

		<property name="javac.excludes" value="${general.excludes}, 
					   **/*.gif, **/*.png" />

		<!-- sets the batik.home present property to the value "true" if
		 the batik package is found. Change the location of batik.home
		 if you want it to be different. -->

		<property name="batik.home" value="${openmap.home}/ext/batik-1.7" />
		<available file="${batik.home}" property="do.svg" />
		<!-- Not used anymore, but kept because it specifies which batik jars are actually used. -->
		<property name="svg.jars" value="${batik.home}/batik-rasterizer.jar;${batik.home}/lib/batik-svggen.jar;${batik.home}/lib/batik-dom.jar;${batik.home}/lib/batik-awt-util.jar;${batik.home}/lib/batik-util.jar;${batik.home}/lib/batik-transcoder.jar;	${batik.home}/lib/batik-ext.jar" />
		
	</target>

	<!--  ############################
	Main targets
	############################ -->

	<target name="all" depends="classes, jar" />

	<target name="classes" depends="init" description="Compiles the SVG Formatter and recreates the jars after compiling this target. You must have Batik (http://xml.apache.org/batik/index.html) installed.  (Call this to build SVG targets)" if="do.svg">
		<ant antfile="${openmap.home}/src/core/build.xml" target="jar" inheritRefs="false" />
		<mkdir dir="${svg.classes}" />
		<echo message="Compiling SVG classes...${ext_tools_classpath}" />
		
		<javac includeantruntime="false" srcdir="${svg.src}" destdir="${svg.classes}" debug="on" excludes="${javac.excludes}" source="1.5" target="1.5">
			<classpath>
				<pathelement path="${svg.jars}" />
				<pathelement path="${openmap.home}/src/core/dist/openmap.jar" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="init" description="Builds jar files, placing them in the lib directory." if="do.svg">
		<jar jarfile="${svg.jar}" basedir="${svg.classes}" index="true" includes="**/*.class" />
	</target>

	<!--  ############################
	Cleanup targets
	############################ -->
	<target name="clean_all" depends="clean, docsclean" description="Delete jar files, class files, and generated documentation." />

	<target name="clean" depends="distclean, jarclean" description="Delete jar files and all class files" />

	<target name="distclean" depends="init" description="Delete class files, but not the jar files.">
		<delete dir="${openmap.svg}/build" />
	</target>

	<target name="jarclean" description="Delete only the jar files from the lib directory.">
		<delete dir="${openmap.svg}/dist" />
	</target>

	<target name="docsclean" description="Delete only the generated API documentation.">
		<delete dir="${openmap.docs}/com" />
		<delete>
			<fileset dir="${openmap.docs}" includes="**/*.html" excludes="doc-index.html" />
		</delete>
		<delete file="${openmap.docs}/stylesheet.css" />
		<delete file="${openmap.docs}/package-list" />
	</target>

	<!--  ############################
	End of cleanup targets.
	############################ -->

</project>

